#include <stdio.h>

int main()
{
    puts("==================================================\n");
    /*
        C 语言中有三大结构，分别是顺序结构、选择结构和循环结构（分支结构）：
        C 语言顺序结构就是让程序按照从头到尾的顺序依次执行每一条 C 语言代码，不重复执行任何代码，也不跳过
        任何代码。
        C 语言选择结构也称分支结构，就是让程序“拐弯”，有选择性的执行代码；换句话说，可以跳过没用的代码，
        只执行有用的代码。
        C 语言循环结构就是让程序“杀个回马枪”，不断地重复执行同一段代码。
    */
    /*
        前面我们看到的代码都是顺序执行的，也就是先执行第一条语句，然后是第二条、第三条……一直到最后一条语句，
        这称为顺序结构。
        if else 的结构为：
        if(判断条件){
            语句块 1
        }else{
            语句块 2
        }
    */
    /*
        所谓语句块（Statement Block） ，就是由{ }包围的一个或多个语句的集合。如果语句块中只有一个语句，也可以省
        略{ }，例如：
        1. if (age >= 18) printf("恭喜，你已经成年，可以使用该软件！ \n");
        2. else printf("抱歉，你还未成年，不宜使用该软件！ \n");
        由于 if else 语句可以根据不同的情况执行不同的代码，所以也叫分支结构或选择结构，
    */
    //下面是关系运算符详解
    /*
        if 的判断条件中使用了<=、 >、 !=等符号，它们专门用在判断条件中，让程
        序决定下一步的操作，称为关系运算符（Relational Operators） 。
        【关系运算符在使用时，它的的两边都会有一个表达式，比如变量、数值、加减乘除运算等，关系运算符的作用就是
        判明这两个表达式的大小关系。注意，是判明大小关系，不是其他关系。】
        关系运算符都是双目运算符，其结合性均为左结合。 关系运算符的优先级低于算术运算符，高于赋值运算符。 在六
        个关系运算符中， <、 <=、 >、 >=的优先级相同，高于==和!=， ==和!=的优先级相同。

        在 C 语言中，有的运算符有两个操作数，例如 10+20， 10 和 20 都是操作数， + 是运算符。我们将这样的运算符称
        为双目运算符。同理，将有一个操作数的运算符称为单目运算符，将有三个操作数的运算符称为三目运算符。
    */
    /*
        运算符            说明                 结合性         举例
        &&    与运算，双目，对应数学中的“且”    左结合    1&&0、 (9>3)&&(b>a)
        ||    或运算，双目，对应数学中的“或”    左结合    1||0、 (9>3)||(b>a)
        !     非运算，单目，对应数学中的“非”    右结合    !a、 !(2<5)

    */
    int age;
    float score;
    printf("请输入你的年龄和成绩: \n");
    scanf("%d %f", &age, &score); //%d接收不了%f的数据，数据会丢失
    if (age >= 18 && score >= 60.0)
    {
        printf("你满足条件，欢迎使用该软件!\n");
    }
    else
    {
        printf("抱歉，你还未成年，或者成绩不合格，不能使用该软件\n");
    }

    /*
        逻辑运算符和其它运算符优先级从低到高依次为：
        赋值运算符(=) < &&和|| < 关系运算符 < 算术运算符 < 非(!)
        && 和 || 低于关系运算符， ! 高于算术运算符。
    */

    return 0;
}